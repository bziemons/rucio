name: Test PR into release

on:
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    if: '!startsWith(github.event.pull_request.head.ref, ''feature'')'
    runs-on: ubuntu-latest
    steps:
      - name: Grab latest release branch
        id: grabrelease
        run: |
          curl $(echo "${{ github.event.repository.branches_url }}" | sed 's/{\/branch}//') | \
          python3 -c 'import sys; import json; print("::set-output name=release_branch::", \
          max(filter(lambda b: b.startswith("release"), (b["name"] for b in json.loads(sys.stdin.read()))), \
              default="no release branch found"), sep="")'
      - name: Fail if no release branch was found
        if: steps.grabrelease.outputs.release_branch == 'no release branch found'
        run: /bin/false
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Fetch pull request commit range
        id: prcommits
        run: |
          curl "${{ github.event.pull_request.commits_url }}" | \
          python3 -c 'import sys; import json; print("::set-output name=source_commits::", \
          (lambda l: f"{l[0]}^..{l[-1]}")([c["sha"] for c in json.loads(sys.stdin.read())]), sep="")'
      - uses: ./.github/actions/mergetest-docker-action
        with:
          source_remote: ${{ github.event.pull_request.head.repo.full_name }}
          source_commits: ${{ steps.prcommits.outputs.source_commits }}
          target_remote: ${{ github.event.pull_request.base.repo.full_name }}
          target_branch: ${{ steps.grabrelease.outputs.release_branch }}
      - name: Fetch containers repository and fetch or build images
        run: |
          git clone https://github.com/rucio/containers.git ./containers
          echo "cloned containers repository to ./containers"
          tar cf ./containers/dev/rucio.tar --exclude=containers *
          echo "rucio.tar packed for container image"
          sudo chown -R $(stat -c "%U:%G" .) .
          echo "changed ownership of workdir recursively to $(stat -c "%U:%G" .)"
          sed -i 's/^RUN git clone https:\/\/github.com\/rucio\/rucio.git \/tmp\/rucio/ADD rucio.tar \/tmp\/rucio/' ./containers/dev/Dockerfile
          echo "replaced git clone with adding rucio.tar in rucio dev Dockerfile"
          sed 's/image: rucio\/rucio-dev/build: ..\/..\/..\/containers\/dev/' ./etc/docker/dev/docker-compose-storage.yml > ./etc/docker/dev/docker-compose-storage-build.yml
          echo "replaced image with build context in docker-compose-storage-build.yml"
          docker-compose --file etc/docker/dev/docker-compose-storage-build.yml build --pull --no-cache
          echo "built and fetched images for docker-compose-storage-build.yml"
      - name: Run docker-compose-storage-build composition
        run: 'docker-compose --file etc/docker/dev/docker-compose-storage-build.yml up -d'
      - name: Run tests with docker
        run: 'docker-compose --file etc/docker/dev/docker-compose-storage-build.yml exec -T rucio tools/run_tests_docker.sh -r'
      - name: Stop and remove containers
        run: 'docker-compose --file etc/docker/dev/docker-compose-storage-build.yml down'
