name: Test PR into release

on:
  pull_request:
    branches:
      - 'master'

jobs:
  setup:
    if: '!startsWith(github.event.pull_request.head.ref, ''feature'')'
    runs-on: ubuntu-latest
    steps:
      - name: Install pip requirements
        run: |
          pip3 install -U pip setuptools
          pip3 install -U PyYAML
      - name: Grab latest release branch
        id: grabrelease
        run: |
          curl $(echo "${{ github.event.repository.branches_url }}" | sed 's/{\/branch}//') | \
          python3 -c 'import sys; import json; print("::set-output name=release_branch::", \
          max(filter(lambda b: b.startswith("release"), (b["name"] for b in json.loads(sys.stdin.read()))), \
              default="no release branch found"), sep="")'
      - name: Fail if no release branch was found
        if: steps.grabrelease.outputs.release_branch == 'no release branch found'
        run: /bin/false
      - name: Fetch pull request commit range
        id: prcommits
        run: |
          curl "${{ github.event.pull_request.commits_url }}" | \
          python3 -c 'import sys; import json; print("::set-output name=source_commits::", \
          (lambda l: f"{l[0]}^..{l[-1]}")([c["sha"] for c in json.loads(sys.stdin.read())]), sep="")'
      - uses: actions/checkout@v2
      - name: Identify Matrix
        id: matrix
        run: echo "::set-output name=matrix::$(etc/docker/test/matrix_parser.py < etc/docker/test/matrix.yml)"
    outputs:
      release_branch: ${{ steps.grabrelease.outputs.release_branch }}
      prcommits: ${{ steps.prcommits.outputs.source_commits }}
      matrix: ${{ steps.matrix.outputs.matrix }}
  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Test cherry-picking changes
        uses: ./.github/actions/mergetest-docker-action
        with:
          source_remote: ${{ github.event.pull_request.head.repo.full_name }}
          source_commits: ${{ needs.setup.outputs.prcommits }}
          target_remote: ${{ github.event.pull_request.base.repo.full_name }}
          target_branch: ${{ needs.setup.outputs.release_branch }}
      - name: Change ownership of workdir recursively
        run: sudo chown -R $(stat -c "%U:%G" .) .
      - name: Build images
        id: images
        run: |
          cd etc/docker/test
          echo "::set-output name=images::$(echo '[${{ toJson(matrix.cfg) }}]' | ./build_images.py)"
      - name: Run test with cfg
        run: |
          cat ./etc/docker/test/run_tests.py
          echo '{"matrix": ${{ toJson(matrix.cfg) }}, "images": ${{ steps.images.outputs.images }} }' | ./etc/docker/test/run_tests.py
