name: Test PR into release

on:
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    if: '!startsWith(github.event.pull_request.head.ref, ''feature'')'
    runs-on: ubuntu-latest
    steps:
      - name: Grab latest release branch
        id: grabrelease
        run: |
          curl $(echo "${{ github.event.repository.branches_url }}" | sed 's/{\/branch}//') | \
          python3 -c 'import sys; import json; print("::set-output name=release_branch::", \
          max(filter(lambda b: b.startswith("release"), (b["name"] for b in json.loads(sys.stdin.read()))), \
              default="no release branch found"), sep="")'
      - name: Fail if no release branch was found
        if: steps.grabrelease.outputs.release_branch == 'no release branch found'
        run: /bin/false
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Fetch pull request commit range
        id: prcommits
        run: |
          curl "${{ github.event.pull_request.commits_url }}" | \
          python3 -c 'import sys; import json; print("::set-output name=source_commits::", \
          (lambda l: f"{l[0]}^..{l[-1]}")([c["sha"] for c in json.loads(sys.stdin.read())]), sep="")'
      - name: Test cherry-picking changes
        uses: ./.github/actions/mergetest-docker-action
        with:
          source_remote: ${{ github.event.pull_request.head.repo.full_name }}
          source_commits: ${{ steps.prcommits.outputs.source_commits }}
          target_remote: ${{ github.event.pull_request.base.repo.full_name }}
          target_branch: ${{ steps.grabrelease.outputs.release_branch }}
      - name: Change ownership of workdir recursively
        run: sudo chown -R $(stat -c "%U:%G" .) .
      - name: Install pip test requirements
        run: |
          pip3 install -U pip setuptools
          echo "upgraded pip and setuptools"
          pip3 install -r etc/pip-requires-test
          echo "installed requirements of test packages"
      - name: Run tests
        run: tools/run_autotests.sh
